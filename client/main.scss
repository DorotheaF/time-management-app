@import "{}/node_modules/bootstrap/scss/bootstrap.scss";
//adding some colors
//variables
//colors:
$sidebar1: #DBE1F1;
$sidebar2: #D6EAF8;
$background1: #edb0d4;
$background2: #FBEEE6;
$button-dark-blue: #85C1E9;
$button-grey: #CCD1D1;

//header?
$header: $sidebar2;
//

$menu: 250px;
$width: calc(100% - 250px); //the width of any content trays minus the menu

h1 {
  font-size: 1.5em;
  margin: 0;
  margin-bottom: 10px;
  display: inline-block;
  margin-right: 1em;
}

body {
  height: 100vh;
  width: 100vw;
  font-family: sans-serif;
  background-color: $background1;
  font-size: 14pt;
}

.header {
  background: $header;
  font-size: 30px;
  height: 60px;
  padding-left: 25px;
  padding-top: 12px;
}

.menu{
  height: 100%;
  background-color: $sidebar1;
  font-size: 16;
  color: black;
}


.menu-item{
  width: 300px;
}

a{
  color: black;
}   

.full-page{
  display: flex;
  flex-direction: row;
  height: calc(100vh - 50px);
  width: 100%;
}

.everything-else{
  width: $width; //change to dynamic viewport minus 300px
}

.content{
  width: 100%;//viewport - 300
  height: 100%;
  display: flex;
  flex-direction: row;
}

.column{
  width: 50%;
  height: 100%;
  padding-left: 15px;
  padding-top: 10px;

}

.priorities{
  height: 75%;
  padding-right: 10px;
}

/*.title{
  //format titles
}*/

.task-list{
  display: flex;
  flex-direction: column; 
  scroll-behavior: auto; //do we want to scrol?
  padding-left: 10px;

  .task{
    width: 100%;
    display: flex;
    flex-direction: row; 
    text-align: left;
    margin: auto;
    border: 1px $header;
    border-style: solid;
    padding-left: 10px;
    justify-content: space-between;
    .text{
      display: flex;
      .index{
        margin-right: 5px;
      }
      /*.title{
      }*/
    }    
    .time-est{
      margin-right: 7px;
    }
  }
}



.new-task{
  display: flex;
  flex-direction: row; 
  text-align: center;
  margin: auto;

  .new-task-button{
    width: 30px; 
    height: 30px; 
    padding: 6px 0px; 
    border-radius: 15px; 
    font-size: 8px; 
    text-align: center; 
  }
}



.mini-calendar-tray{
  height: 65%;
  margin-right: 20px;
  .mini-calendar{
    height: calc(100% - 30px);
    display: flex;
    .cal-column{
      height:100%;
      width: 33.33%;
      border: 1px black;
      border-style: solid;
      padding: 5px;
      .line{
        background-color: black;
        height: 2px;
      }
    }
  }
  
}

.classes-tray{
  height: 35%;
  .classes{
    height: calc(100% - 40px);
    border: 1px solid black;
    border-radius: 15px;
    margin-right: 20px;
    margin-bottom: 10px;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    .class-item{
      margin: 10px;
    }
  }
}


.column-a{
  width: 100%;
  height: 100%;
  padding-left: 15px;
  padding-top: 10px;
}

.column-b{
  width: 35%;
  height: 100%;
  padding-left: 15px;
  padding-top: 10px;
}

.column-c{
  width:520px;
  height:100%;
  padding-left: 8px;
  padding-top: 10px;
}



.break-time-tray{
  height: 350px;
  border: 1px solid black;
  border-radius: 15px;
  margin-right: 20px;
  margin-bottom: 10px;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;    
  
  }

.base-timer {
  position: relative;
  width: 300px;
  height: 300px;
/* Removes SVG styling that would hide the time label */
  &__circle {
    fill: none;
    stroke: none;
  }
  
/* The SVG path that displays the timer's progress */
  &__path-elapsed {
    stroke-width: 7px;
    stroke:grey;
  }
  &__label {
    position: absolute;    
    
    /* Size should match the parent container */    
    width: 300px;
    height: 300px;
    /* Keep the label aligned to the top */    
    top: 0;
    /* Create a flexible box that centers content vertically and horizontally */    
    display: flex;
    align-items: center;
    justify-content: center;
    /* Sort of an arbitrary number; adjust to your liking */
    font-size: 48px;
  }

  &__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 7px;
    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;
    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;
    /* One second aligns with the speed of the countdown timer */
    transition: 1s linear all;
    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;
      &.green {
        color: rgb(65, 184, 131);
      }
      &.orange {
        color: orange;
      }
      &.red {
        color: red;
      }
    }
  &__svg {
    /* Flips the svg and makes the animation to move left-to-right*/
    transform: scaleX(-1);
  }
}
.ScrollStyle1{
  height: 1000px;
  overflow-y: scroll;
}
.ScrollStyle2{
  height: 200px;
  overflow-y:scroll;
}

li::marker{
  content:none;
}

.calendar-month {
  position: relative;
  text-align: center;
  background-color: white;
  
}

.day-of-week {
  color: var(--grey-800);
  font-size: 18px;
  background-color: #fff;
  padding-bottom: 0px;
  padding-top: 10px;
}


/* TIMEBAR COMPONENT */
.c-timebar {
  width: 100%;
  height: 75%;
  position: relative;
}

.c-timebar__background {
  width: 100%;
  height: 75%;
  position: absolute;
  left: 0;
  top: 0;
  background: #FFF8C4;
  opacity: 0.15;
  z-index: 1;
}

.c-timebar__remaining {
  width: 100%;
  height: 75%;
  position: absolute;
  left: 0;
  top: 0;
  background: #FFE626;
  z-index: 2;
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
}

@-webkit-keyframes timebar_progress_x {
  from {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
  }
  to {
    -webkit-transform: scaleX(0);
            transform: scaleX(0);
  }
}

@keyframes timebar_progress_x {
  from {
    -webkit-transform: scaleX(1);
            transform: scaleX(1);
  }
  to {
    -webkit-transform: scaleX(0);
            transform: scaleX(0);
  }
}
@-webkit-keyframes timebar_progress_y {
  from {
    -webkit-transform: scaleY(1);
            transform: scaleY(1);
  }
  to {
    -webkit-transform: scaleY(0);
            transform: scaleY(0);
  }
}
@keyframes timebar_progress_y {
  from {
    -webkit-transform: scaleY(1);
            transform: scaleY(1);
  }
  to {
    -webkit-transform: scaleY(0);
            transform: scaleY(0);
  }
}





.day-of-week,
.days-grid {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  
}

.day-of-week {
  text-align: right;
  padding-right: 5px;
  
}

.days-grid{
  height: 100%;
  position: relative;
  grid-column-gap: var(--grid-gap);
  grid-row-gap: var(--grid-gap);
  border-top: solid 1px black;
}

.calendar-month {
  position: relative;
  text-align: center;
  background-color: white;
  
}
.day-of-week {
  color: var(--grey-800);
  font-size: 18px;
  background-color: #fff;
  padding-bottom: 0px;
  padding-top: 10px;
}
.day-of-week,
.days-grid {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  
}
.day-of-week {
  text-align: right;
  padding-right: 5px;
  
}
.days-grid{
  height: 100%;
  position: relative;
  grid-column-gap: var(--grid-gap);
  grid-row-gap: var(--grid-gap);
  border-top: solid 1px black;
}

.calendar-day {
  position: relative;
  min-height: 100px;
  font-size: 16px;
  background-color: #fff;
  color: var(--grey-800);
  padding: 4px;
  border-right:1.25px solid black;
  border-left: 1.25px solid black;
  border-top: 1.25px solid black;
  border-bottom:1.25px solid black;  
  
}
.calendar-day > span {
  display: flex;
  justify-content: left;
  align-items: left;
  position: left;
 
  width: var(--day-label-size);
  height: var(--day-label-size);
  }
.calendar-day--not-current {
  background-color: grey;
  color: var(--grey-300);
}
.calendar-day--today {
  padding-top: 4px;
  background-color: lightgreen;
  
}
.calendar-day--today > span {
    border-radius: 9999px;
  background-color: var(--grey-800);
}

